(include "config.yuck")

(defvar apps "[]")

(defwindow eww-launcher-x11
  :monitor 0
  :focusable true
  :windowtype "dock"
  :geometry (geometry
    :width "30%"
    :height "30%"
    :anchor "center center")
  (eww-launcher :ws "x11"))

(defwindow eww-launcher-wl
  :monitor 0
  :focusable true
  :stacking "overlay"
  :geometry (geometry
    :width "30%"
    :height "30%"
    :anchor "center center")
  (eww-launcher :ws "wl"))

(defwidget eww-launcher [ws]
  (box
    :class {ws == "wl" ? "launcher-box" : "launcher-box round"}
    :orientation "vertical"
    :space-evenly false
    (box
      :space-evenly false
      (label
        :class {ws == "wl" ? "search-mode" : "search-mode round"}
        :text "Apps")
      (input
        :class {ws == "wl" ? "search-input" : "search-input round"}
        :hexpand true
        :onchange "scripts/filter.sh {}"
        :onaccept "eww close eww-launcher-${ws} && $(${apps[0].exec}) &")
      (button
        :class {ws == "wl" ? "refresh" : "refresh round"}
        :onclick "$(scripts/search.sh ${icon-theme})"
        "")
      (button
        :class {ws == "wl" ? "close" : "close round"}
        :onclick "eww close eww-launcher-${ws}"
        "󰅖"))
    (scroll
      :vexpand true
      (box
        :orientation "vertical"
        :space-evenly false
        (for app in apps
          (app-entry :app-json app :ws ws))))))

(defwidget app-entry [app-json ws]
  (button
    :class "app-entry"
    :onclick "eww close eww-launcher-${ws} && $(${app-json.exec}) &"
    (box
      :orientation "horizontal"
      :space-evenly false
      (image
        :path {app-json.icon}
        :image-width 32
        :image-height 32)
      (label
        :text {app-json.name}
        :limit-width 60))))

